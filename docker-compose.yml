version: '3.8'

services:
  db:
    image: postgres:17
    container_name: n8n-db
    hostname: n8n-db
    restart: on-failure:5
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      TZ: ${TIMEZONE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_PATH}/db:/var/lib/postgresql/data:rw
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    hostname: n8n
    restart: on-failure:5
    user: 0:0
    security_opt:
      - no-new-privileges:true
    depends_on:
      db:
        condition: service_healthy
    ports:
      - ${N8N_PORT}:5678
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 5678 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    environment:
      N8N_HOST: ${N8N_HOST}
      WEBHOOK_URL: ${WEBHOOK_URL}
      GENERIC_TIMEZONE: ${TIMEZONE}
      TZ: ${TIMEZONE}
      N8N_PORT: 5678
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_PROTOCOL: ${N8N_PROTOCOL}
      NODE_ENV: production
      N8N_RUNNERS_ENABLED: true
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
      N8N_SECURE_COOKIE: ${N8N_SECURE_COOKIE}
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: n8n-db
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_PATH}/data:/root/.n8n:rw
      - ${DATA_PATH}/files:/files:rw
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M
